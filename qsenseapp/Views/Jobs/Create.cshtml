@model qsenseapp.Models.Job

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script type="text/javascript">

    $(document).ready(function () {
       
  
        $('.form_datetime').datetimepicker({ format: "dd/mm/yyyy hh:ii", autoclose: true, todayBtn: true, forceParse:false }); //Initialise any date pickers
   

        //Dropdownlist Selectedchange event

        $("#BusinessPartnerID").change(function () {

            $.ajax({

                type: 'POST',

                url: '@Url.Action("GetBusinessPartnerPriceNet")', // we are calling json method
                dataType: 'json',
                data: { id: $("#BusinessPartnerID").val() },
                success: function (jq) {

                    $("#ChargeRateHourNet").val(jq);
                   
                },

                error: function (ex) {

                    alert('Failed to retrieve Business Partner Default Price Net.' + ex.error.toString());

                }

            });

            return false;

        })

    });

</script>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPartnerID, "BusinessPartnerID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BusinessPartnerID", (SelectList) ViewBag.BusinessPartnerLookup, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BusinessPartnerID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DueOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueOn, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.DueOn, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.JobType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChargeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ChargeType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ChargeType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChargeRateHourNet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChargeRateHourNet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChargeRateHourNet, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BudgetHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BudgetHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BudgetHours, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
