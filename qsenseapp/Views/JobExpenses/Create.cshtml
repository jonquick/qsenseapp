@model qsenseapp.Models.JobExpense

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.form_datetime').datetimepicker({ format: "dd/mm/yyyy hh:ii", autoclose: true, todayBtn: true, forceParse: false }); //Initialise any date pickers

        //Dropdownlist Selectedchange event

        $("#JobLookup").change(function () {

            $.ajax({

                type: 'POST',

                url: '@Url.Action("GetJobPriceNet")', // we are calling json method
                dataType: 'json',
                data: { id: $("#JobID").val() },
                success: function (jq) {

                    $("#PriceNet").val(jq);

                },

                error: function (ex) {

                    alert('Failed to retrieve Job Default Price Net.' + ex.error.toString());

                }

            });

            return false;

        })

        //Dropdownlist Selectedchange event
        $("#BusinessPartnerLookup").change(function () {

            $("#JobLookup").empty();

            $.ajax({

                type: 'POST',

                url: '@Url.Action("GetJobList")',

                dataType: 'json',

                data: { id: $("#BusinessPartnerLookup").val() },

                success: function (jobs) {

                    // states contains the JSON formatted list

                    // of states passed from the controller

                    $.each(jobs, function (i, job) {

                        $("#JobLookup").append('<option value="' + job.Value + '">' + job.Text + '</option>');

                    });
                },

                error: function (ex) {

                    alert('Failed to Job list' + ex);

                }

            });


        });

    })

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>JobExpense</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

       
        <div class="form-group">
            @Html.LabelFor(model => model.JobID, "Business Partner", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BusinessPartnerLookup", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobID, "JobID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("JobLookup", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ExpenseType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpenseType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartOn, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.StartOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishOn, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.FinishOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceNet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceNet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceNet, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AdjustNet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdjustNet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdjustNet, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
